import XMonad
import XMonad.Actions.WindowBringer
import XMonad.Hooks.DynamicLog
import XMonad.Hooks.FadeInactive
import XMonad.Hooks.ManageDocks
import XMonad.Layout.Reflect
import XMonad.Layout.Spacing
import XMonad.Util.EZConfig(additionalKeys)

import System.IO
import Graphics.X11.ExtraTypes.XF86

myModMask = mod4Mask

printToFile file str = do
    handle <- openFile file WriteMode
    hPutStr handle str
    hClose handle

toggleStrutsKey XConfig {XMonad.modMask = modMask} = (modMask, xK_b)

myLayoutHook = (tall ||| wide ||| reflectHoriz tall ||| reflectVert wide ||| Full)
    where tall    = Tall 1 (3/100) (1/2)
          wide    = Mirror tall

main = do
    xmonad =<< statusBar "killall lemonbar; bin/bar_feeder | lemonbar -p | zsh" defaultPP toggleStrutsKey myConfig

myConfig = defaultConfig
        { terminal = "xterm"
        , modMask = myModMask
        , borderWidth = 0
        , normalBorderColor = "#555555"
        , focusedBorderColor = "#cccccc"
        , layoutHook = myLayoutHook
        , logHook = dynamicLogWithPP (defaultPP { ppOutput = printToFile ".xmonad/status_bar"}) >> fadeInactiveLogHook 0.8
        }
        `additionalKeys`
        [ ((myModMask, xK_Escape),                spawn "i3lock -e")
        , ((myModMask .|. shiftMask, xK_Escape),  spawn "i3lock -e && systemctl suspend")
        , ((0, xF86XK_AudioLowerVolume),          spawn "amixer -c 2 set Headset 1-")
        , ((0, xF86XK_AudioRaiseVolume),          spawn "amixer -c 2 set Headset 1+")
        , ((0, xF86XK_AudioMute),                 spawn "amixer -c 2 set Headset toggle")
        , ((myModMask, xK_g),                     gotoMenu)
        , ((myModMask, xK_b),                     bringMenu)
        , ((myModMask .|. shiftMask, xK_b),       sendMessage ToggleStruts)
        , ((controlMask .|. shiftMask, xK_space), spawn "~/bin/switch_layout")
        ]
